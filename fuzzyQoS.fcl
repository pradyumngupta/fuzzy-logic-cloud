FUNCTION_BLOCK vmType	// Block definition (there may be more than one block per file)

// Define input variables
VAR_INPUT				
	processingPower : REAL;
	bandWidth : REAL;
END_VAR

// Define output variable
VAR_OUTPUT				
	vmType : REAL;
END_VAR

// Fuzzify input variable 'processingPower': {'poor', 'good' , 'excellent'}
FUZZIFY processingPower	
	TERM veryLow :=(0, 0) ( 1000,1) (2000,0) ;// gauss 1000 2000;	
	TERM low := ( 1250,0) ( 2500,1) (3200,0) ;//gauss 2500 2000;
	TERM medium := ( 2750,0) ( 3500,1) (4200,0) ;//gauss 3500 2000;
	TERM High := (3750,0) ( 4500,1) ( 5500,0) ;//gauss 4500 2000;
END_FUZZIFY

// Fuzzify input variable 'bandWidth': { 'rancid', 'delicious' }
FUZZIFY bandWidth			
	TERM low := ( 500,0) ( 600,1) (750,0) ;//gauss 600 150;
	TERM medium := ( 650,0) ( 800,1) (950,0) ;//gauss 800 150;
	TERM High := ( 850,0) ( 1000,1) ( 1200,0)  ;//gauss 1000 150; 
END_FUZZIFY

// Defzzzify output variable 'vmType' : {'Type0', 'Type1', 'generous' }
DEFUZZIFY vmType			
	TERM Type0 := (0, 0) (1, 1) (2,0) ;//gauss 1 1;
	TERM Type1 := ( 1,0) (2, 1) (3,0) ;//gauss 2 1;
	TERM Type2 := ( 2,0) (3, 1) (4,0) ;//gauss 3 1;
	TERM Type3 := (3 ,0) (4, 1) (5,0) ;//gauss 4 1;
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 1;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY
RULEBLOCK No1
	AND : MIN;	// Use 'min' for 'and'
	ACT : MIN;	// Use 'min' activation method
	ACCU : MAX;	// Use 'max' accumulation method


	RULE 1 : IF processingPower IS veryLow AND bandWidth IS low THEN vmType IS Type0;
	RULE 2 : IF processingPower IS veryLow AND bandWidth IS medium THEN vmType IS Type0;
	RULE 3 : IF processingPower IS veryLow AND bandWidth IS High THEN vmType IS Type1;
	RULE 4 : IF processingPower IS low AND bandWidth IS low THEN vmType IS Type1;
	RULE 5 : IF processingPower IS low AND bandWidth IS medium THEN vmType IS Type2;
	RULE 6 : IF processingPower IS low AND bandWidth IS low THEN vmType IS Type2;
	RULE 7 : IF processingPower IS medium AND bandWidth IS low THEN vmType IS Type2;
	RULE 8 : IF processingPower IS medium AND bandWidth IS medium THEN vmType IS Type3;
	RULE 9 : IF processingPower IS medium AND bandWidth IS High THEN vmType IS Type3;
	RULE 10 : IF processingPower IS High THEN vmType IS Type3;



END_RULEBLOCK

// Inference rules

END_FUNCTION_BLOCK
